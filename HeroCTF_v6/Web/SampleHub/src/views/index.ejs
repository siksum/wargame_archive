<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Samples</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-5">
        <h1 class="text-3xl font-bold mb-6 text-center">File Samples</h1>
        <div class="mb-6">
            <input 
                type="text" 
                id="search" 
                placeholder="Search for files..." 
                class="w-full p-3 border border-gray-300 rounded-lg shadow focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
        </div>
        <div id="file-list" class="space-y-4"></div>
    </div>

    <script>
        const searchInput = document.getElementById("search");
        const fileList = document.getElementById("file-list");
    
        fetch("/samples.json")
            .then(response => response.json())
            .then(samples => {
                const originalSamples = samples;
    
                function populateList(samples) {
                    fileList.innerHTML = "";
                    if (samples.length === 0) return;
    
                    samples.forEach(sample => {
                        const div = document.createElement("div");
                        div.className = "flex items-center justify-between p-4 bg-white border border-gray-200 rounded-lg shadow";
                        div.innerHTML = `
                            <div>
                                <h2 class="font-semibold">${sample.extension}</h2>
                                <p class="text-gray-600">${sample.description}</p>
                            </div>
                            <a href="/download/${sample.filename}" class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 transition">Download</a>
                        `;
                        fileList.appendChild(div);
                    });
                }
    
                searchInput.addEventListener("input", function() {
                    const query = this.value.toLowerCase();
                    if (query) {
                        const filteredSamples = originalSamples.filter(sample =>
                            sample.extension.toLowerCase().includes(query)
                        );
                        populateList(filteredSamples);
                    } else {
                        fileList.innerHTML = "";
                    }
                });
            })
            .catch(error => console.error("Error fetching samples:", error));
    </script>
</body>
</html>
